@page "{id:int}"
@model CursosOnlineApp.Pages.Cursos.DetalleModel
@{
    ViewData["Title"] = "Detalles del Curso";
}

<main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    <!-- Course Hero -->
    <div class="bg-white rounded-lg shadow-sm overflow-hidden mb-8">
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 items-center justify-center">
            <!-- Course Image -->
            <div class="relative">
                <img src="@Model.Curso.ImagenUrl ?? " https://via.placeholder.com/600x400?text=Curso+sin+imagen""
                    alt="@Model.Curso.Titulo" class="w-full aspect-video object-cover">
            </div>

            <!-- Course Info -->
            <div class="p-8">
                <div class="flex items-center justify-between mb-4">
                    <span class="px-3 py-1 bg-blue-100 text-blue-800 text-sm rounded-full">@Model.Curso.Categoria</span>
                </div>

                <h1 class="text-3xl font-bold text-gray-900 mb-4">@Model.Curso.Titulo</h1>
                <p class="text-gray-600 mb-6">@Model.Curso.Descripcion</p>

                <div class="grid grid-cols-2 gap-4 mb-6">
                    <div class="flex items-center text-sm text-gray-600">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                        @Model.DuracionTotalCurso minutos
                    </div>
                    <div class="flex items-center text-sm text-gray-600">
                        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z" />
                        </svg>
                        @Model.Curso.Lecciones.Count() lecciones
                    </div>
                </div>

                <div class="flex items-center justify-between">
                    <span class="text-3xl font-bold text-blue-600">$@Model.Curso.Precio</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Course Content -->
    <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Main Content -->
        <div class="lg:col-span-2 space-y-8">
            <!-- Sobre el curso -->
            <div class="bg-white rounded-lg shadow-sm p-6">
                <h2 class="text-2xl font-bold text-gray-900 mb-4">Sobre este curso</h2>
                <p class="text-gray-600">@Model.Curso.Descripcion</p>
            </div>

            <!-- Curriculum -->
            <div class="bg-white rounded-lg shadow-sm p-6">
                <h2 class="text-2xl font-bold text-gray-900 mb-4">Contenido del curso</h2>
                @if (Model.PuedeAgregarLeccion)
                {
                    <div class="mb-4">
                        <a href="/Lecciones/Crear?cursoId=@Model.Curso.Id"
                        class="inline-block bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded">
                            + Agregar nueva lección
                        </a>
                    </div>
                }
                @if (Model.Curso.Lecciones.Any())
                {
                    <ul class="divide-y divide-gray-200">
                        @foreach (var leccion in Model.Curso.Lecciones.OrderBy(l => l.Orden))
                        {
                            <li class="py-4 px-4 flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4 
                                @(Model.LeccionesVistasIds.Contains(leccion.Id) ? "bg-green-50" : "")">
                                <div>
                                    <p class="text-gray-900 font-medium">@leccion.Orden - @leccion.Titulo</p>
                                    <p class="text-sm text-gray-500">@leccion.DuracionMinutos minutos</p>
                                </div>
                                <div class="flex gap-2">
                                    @if (Model.EsEstudiante && Model.EstaInscrito && Model.LeccionesVistasIds.Contains(leccion.Id))
                                    {
                                        <span class="bg-green-100 text-green-800 text-sm px-4 py-1 rounded">
                                            Lección vista
                                        </span>
                                    }
                                    else
                                    {
                                        <a href="/Lecciones/Ver/@leccion.Id"
                                        class="bg-blue-600 hover:bg-blue-700 text-white text-sm px-4 py-1 rounded">
                                            Ver lección
                                        </a>
                                    }

                                    @if (Model.PuedeAgregarLeccion)
                                    {
                                        <a href="/Lecciones/Editar/@leccion.Id"
                                            class="bg-yellow-500 hover:bg-yellow-600 text-white text-sm px-4 py-1 rounded">
                                            Editar
                                        </a>
                                        
                                        <button type="button" onclick="confirmarEliminacion(@leccion.Id)"
                                            class="bg-red-600 hover:bg-red-700 text-white text-sm px-4 py-1 rounded">
                                            Eliminar
                                        </button>
                                        
                                    }
                                </div>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <p class="text-gray-500">Este curso aún no tiene lecciones.</p>
                }
            </div>
        </div>

        <!-- Sidebar -->
        <div class="space-y-6">
            <div class="bg-white rounded-lg shadow-sm p-6">
                <h3 class="text-lg font-bold text-gray-900 mb-4">Información del instructor</h3>
                @if (Model.Curso.Instructor != null)
                {
                    <div class="flex items-center space-x-4">
                        <div>
                            <h4 class="font-semibold text-gray-900">@Model.Curso.Instructor.Nombre</h4>
                            <p class="text-sm text-gray-600">@Model.Curso.Instructor.Email</p>
                        </div>
                    </div>
                }
                else
                {
                    <p class="text-sm text-gray-500">Sin información del instructor.</p>
                }
            </div>

            @if (Model.PuedeAgregarLeccion)
            {
                <a href="/Cursos/Editar/@Model.Curso.Id"
                    class="block bg-yellow-600 text-white px-4 py-2 rounded hover:bg-yellow-700 text-center">
                    Editar Curso
                </a>
            }

            @if (Model.EsEstudiante)
            {
                if (!Model.EstaInscrito)
                {
                    <form method="post" asp-page-handler="Inscribir">
                        <button type="submit" class="w-full bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700">
                            Inscribirme en este curso
                        </button>
                    </form>
                }
                else
                {
                    <p class="text-green-700 font-semibold text-center">Ya estás inscrito en este curso.</p>
                }
            }
        </div>
    </div>
</main>

<script>
    function confirmarEliminacion(leccionId) {
        Swal.fire({
            title: '¿Estás seguro?',
            text: "¡Esta acción no se puede deshacer!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#6b7280',
            confirmButtonText: 'Sí, eliminar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                // Crear y enviar un formulario POST dinámico
                const form = document.createElement('form');
                form.method = 'post';
                form.action = `/Lecciones/Eliminar/${leccionId}`;

                const token = document.querySelector('input[name="__RequestVerificationToken"]');
                if (token) {
                    const hiddenToken = document.createElement('input');
                    hiddenToken.type = 'hidden';
                    hiddenToken.name = '__RequestVerificationToken';
                    hiddenToken.value = token.value;
                    form.appendChild(hiddenToken);
                }

                document.body.appendChild(form);
                form.submit();
            }
        });
    }
</script>